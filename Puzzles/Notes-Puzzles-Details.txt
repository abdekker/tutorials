Additional details on puzzles (where the one-line description i

0001: Print all numbers up to 1000 that have the digit 5 in their number
0002: Write a function to add two numbers without using any addition, subtraction, increment or decrement operator
0003: Find the largest and smallest of three numbers without using conditional statements or ternary operators
0004: Print "Hello World" without using a semicolon
0005: Sort an array, removing duplicates except 1s. Place duplicate 1s at the end.
0006: Modify each element of an array by multiplying it by a constant factor
0007: Generate a square spiral matrix from 1 to n^2
0008: In the MIU system invented by Douglas R. Hofstadter, can the word "MU" be generated from "MI"?

### 0001 - nothing more required ###
### 0002 - nothing more required ###
### 0003 - nothing more required ###
### 0004 - nothing more required ###

### 0005 ###
Implement a method "distinct(...)" that returns an ascendingly sorted array that does not
contain any repetitions but those of the number '1'. All repetitions of '1' should be the
last values of the array.
Example: distinct({3,3,1,1,9}) returns {1,3,9,1}.
#

### 0006 ###
multiply_array_elements() is a function to modify each element of an array by multiplying it with n.

	#include <vector>
	typedef std::vector<int> ARRAY; 

	void multiply_array_elements(ARRAY a, int n)
	{ 
		for (auto el : a) {
			el *= n;
		}
	}

	int main(int argc, char *argv[])
	{ 
		ARRAY test = {1, 2, 4, 5, 6, 0, 8}; 
		multiply_array_elements(test, 4); 
		return 0;
	}
	
a) What are the values of "test" after executing main?
b) What needs to be changed to make the function "multiply_array_elements()" work as expected, and why?
#

#### 0007 ###
Example: With input 3 the output is
	[ 1 2 3 ]
	[ 8 9 4 ]
	[ 7 6 5 ]
#

### 0008 ###
In his book, "Godel, Escher, Bach: An eternal golden braid", Douglas R. Hofstadter presented the "MIU" formal system.
This has one axiom and four rules of production.

Axiom: Strings are formed with the letters "M", "I" and "U". Only these letters are allowed.

Rules of production:
1) If you have MxI, you may make a new string MxIU
2) If you have Mx, you may make a new string Mxx
3) If you have a string with "III" anywhere in it, you may make a new string by replacing "III" with "U"
4) If you have a string with "UU" anywhere in it, you may make a new string by dropping "UU"

Examples:
1) Given MUI, you may add MUIU to your collection
2) Given MIIU, you may add MIIUIIU to your collection
3) Given MIIII, you may add MUI or MIU to your collection
4) Given MIUUIU, you may add MIIU to your collection

You are given only the starting word "MI". Can the word "MU" be formed? Assume a maximum length of string of 20 characters.
#
