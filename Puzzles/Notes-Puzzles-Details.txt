Additional details on puzzles (where the one-line description i

0001: Print all numbers up to 1000 that have the digit 5 in their number
0002: Write a function to add two numbers without using any addition, subtraction, increment or decrement operator
0003: Find the largest and smallest of three numbers without using conditional statements or ternary operators
0004: Print "Hello World" without using a semicolon
0005: Sort an array, removing duplicates except 1s. Place duplicate 1s at the end.
0006: Modify each element of an array by multiplying it by a constant factor
0007: Generate a square spiral matrix from 1 to n^2
0008: In the MIU system invented by Douglas R. Hofstadter, can the word "MU" be generated from "MI"?
0009: Generate a number of rounds for 18 people in groups of size 3 (ie. 6 groups per round). Everyone should be in a group with everyone else at least once.
0010: Starting with 200 blocks, remove a different prime number of blocks in seven rounds according to rules given below

### 0001 - nothing more required ###
### 0002 - nothing more required ###
### 0003 - nothing more required ###
### 0004 - nothing more required ###

### 0005 ###
Implement a method "distinct(...)" that returns an ascendingly sorted array that does not
contain any repetitions but those of the number '1'. All repetitions of '1' should be the
last values of the array.
Example: distinct({3,3,1,1,9}) returns {1,3,9,1}.
#

### 0006 ###
multiply_array_elements() is a function to modify each element of an array by multiplying it with n.

	#include <vector>
	typedef std::vector<int> ARRAY; 

	void multiply_array_elements(ARRAY a, int n)
	{ 
		for (auto el : a) {
			el *= n;
		}
	}

	int main(int argc, char *argv[])
	{ 
		ARRAY test = {1, 2, 4, 5, 6, 0, 8}; 
		multiply_array_elements(test, 4); 
		return 0;
	}
	
a) What are the values of "test" after executing main?
b) What needs to be changed to make the function "multiply_array_elements()" work as expected, and why?
#

#### 0007 ###
Example: With input 3 the output is
	[ 1 2 3 ]
	[ 8 9 4 ]
	[ 7 6 5 ]
#

### 0008 ###
In his book, "Godel, Escher, Bach: An eternal golden braid", Douglas R. Hofstadter presented the "MIU" formal system.
This has one axiom and four rules of production.

Axiom: Strings are formed with the letters "M", "I" and "U". Only these letters are allowed.

Rules of production:
1) If you have MxI, you may make a new string MxIU
2) If you have Mx, you may make a new string Mxx
3) If you have a string with "III" anywhere in it, you may make a new string by replacing "III" with "U"
4) If you have a string with "UU" anywhere in it, you may make a new string by dropping "UU"

Examples:
1) Given MUI, you may add MUIU to your collection
2) Given MIIU, you may add MIIUIIU to your collection
3) Given MIIII, you may add MUI or MIU to your collection
4) Given MIUUIU, you may add MIIU to your collection

You are given only the starting word "MI". Can the word "MU" be formed? Assume a maximum length of string of 20 characters.
#

### 0009 ###
There are 18 people (or items, etc) and a group size of 3. Each round, partition the people into groups. For example:
	Round 1 = (1,2,3) (4,5,6) (7,8,9) (10,11,12) (13,14,15) (16,17,18)

On each subsequent round, generate a new partition (ie. mix the people into different groups). The aim is to generate the minimum number of rounds such that everyone is with everyone else at least once. Duplicates (two people being in the same group) will be inevitable, but should be kept to a minimum. The order in each group is not relevant.

Ideally, the total number of people and the group size would be flexible.

An example application:
* 18 young violin players are meeting at a summer camp
* The organiser has acquired a number of violin trios
* Each round, the organiser wishes to create six groups, with 3 violinists per group
* During a round, all groups play through the same trio
* After, say, 30 minutes and a short break, a new round starts with a fresh grouping and new trio
* Everyone should play with everyone else at least once during the day
* The order when they play with each other, or the order within each group does not matter
* What is the minimum number of rounds required to product this result?
#

### 0010 ###
You build a large tower of 200 Lego bricks. Each round, launch a missile (eg. a ball) at the tower and knock off a (different) prime number of bricks off the tower, fewer than remain. After each shot, the number of bricks left in the tower was:
1) a prime
2) a square
3) a cube
4) a prime times a square greater than 1
5) a prime times a cube greater than 1
6) none of the aforementioned
7) a prime
The above would still be valid if the numbers blasted off by the sixth and seventh shots were swapped. How many bricks remained in the tower after the seventh shot?
#
